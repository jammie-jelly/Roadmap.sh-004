- name: Install Docker and start Docker Compose services
  hosts: servers
  become: yes
  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Dockerâ€™s official GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Get architecture using dpkg
      command: dpkg --print-architecture
      register: dpkg_architecture

    - name: Add the Docker repository to Apt sources
      lineinfile:
        path: /etc/apt/sources.list.d/docker.list
        line: "deb [arch={{ dpkg_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        create: yes

    - name: Update apt package index again
      apt:
        update_cache: yes

    - name: Install Docker Engine and related packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: latest

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create local CI directory
      file:
        path: /home/ubuntu/ci 
        state: directory

    - name: Clone the repository
      git:
        repo: 'https://github.com/jammie-jelly/Roadmap.sh-004.git'  
        dest: /home/ubuntu/ci  
        version: main  # Specify the branch or tag
        force: yes
        
    - name: Build docker image
      command: docker compose build 
      args:
        chdir: /home/ubuntu/ci

    - name: Run docker application in background
      command: docker compose up -d
      args:
        chdir: /home/ubuntu/ci
        
    - name: Wait for services to become active
      pause:
        seconds: 5

    - name: Fetch logs for the application
      command: docker logs ci-app-1
      register: log_output

    - name: Display logs
      debug:
        var: log_output.stdout
